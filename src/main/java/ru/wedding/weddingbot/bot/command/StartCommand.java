package ru.wedding.weddingbot.bot.command;

import java.util.Optional;
import lombok.extern.slf4j.Slf4j;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.chat.Chat;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.generics.TelegramClient;
import ru.wedding.weddingbot.bot.command.helper.ButtonsHelper;
import ru.wedding.weddingbot.bot.command.helper.NameHelper;
import ru.wedding.weddingbot.entity.User;
import ru.wedding.weddingbot.service.UserService;
import ru.wedding.weddingbot.utils.FileHelper;

@Slf4j
@Component
@Order(0)
public class StartCommand extends Command {

  private static final String name = "/start";

  private final UserService userService;

  protected StartCommand(TelegramClient telegramClient, UserService userService) {
    super(name, telegramClient);
    this.userService = userService;
  }

  @Override
  public void handle(Update update) {
    Optional.ofNullable(update)
        .map(Update::getMessage)
        .ifPresent(it -> {
          User user = saveUser(it.getChat());
          sendMessage(
              it.getChatId(),
              user
          );
        });
  }

  private void sendNotificationToAdmin(User user) {
    userService.findAdmins().stream()
        .map(User::getChatId)
        .forEach(
            it -> sendMessage(it, "–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! @" + Optional.ofNullable(user.getUsername())
                .orElse(String.valueOf(user.getId())))
        );
  }

  private void sendMessage(Long chatId, User user) {
    SendPhoto message = SendPhoto.builder()
        .chatId(chatId)
        .photo(FileHelper.getFile("start.JPG"))
        .caption(String.format("""
            –î–æ—Ä–æ–≥–æ–π/–∞—è %s!
                        
            –ü—Ä–∏–≥–ª–∞—à–∞–µ–º —Ç–µ–±—è –Ω–∞ –Ω–∞—à—É —Å–≤–∞–¥—å–±—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç—Å—è 28-–≥–æ —Å–µ–Ω—Ç—è–±—Ä—è –≤ –õ–æ—Ñ—Ç–µ –¢–æ–ª—Å—Ç–æ–≥–æ –≤ 15:30!
            –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –Ω–∞—à–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.
            –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç.
                        
            –ú—ã –æ—á–µ–Ω—å —Ö–æ—Ç–∏–º —Ä–∞—Å—Ç—è–Ω—É—Ç—å —Ü–≤–µ—Ç–æ—á–Ω–æ–µ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –Ω–∞–¥–æ–ª–≥–æ, –ø–æ—ç—Ç–æ–º—É –≤–º–µ—Å—Ç–æ —Ü–≤–µ—Ç–æ–≤ –≤ –¥–µ–Ω—å —Å–≤–∞–¥—å–±—ã –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–∞–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —Ü–≤–µ—Ç–æ—á–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –±—É–∫–µ—Ç—ã –æ—Ç –≤–∞—Å –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—éüíê
                        
            –ú—ã –±—É–¥–µ–º –∂–¥–∞—Ç—å —Ç–µ–±—è!
            –ú–∞—à–∞ –∏ –°–µ—Ä–µ–∂–∞
                     
            """, NameHelper.name(user)))
        .parseMode("HTML")
        .replyMarkup(ButtonsHelper.buttons())
        .build();

    try {
      telegramClient.execute(message);
      telegramClient.execute(IComeCommand.buildMessage(user));
    } catch (TelegramApiException e) {
      log.error(e.getMessage(), e);
    }
  }

  private User saveUser(Chat chat) {

    if (chat != null) {
      User user = userService.findById(chat.getId())
          .orElse(null);
      if (user == null) {
        user = new User();
        user.setId(chat.getId());
        user.setChatId(chat.getId());
        user.setFirstName(chat.getFirstName());
        user.setLastName(chat.getLastName());
        user.setUsername(chat.getUserName());
        userService.save(user);
        sendNotificationToAdmin(user);
      }
      return user;
    }
    return null;
  }
}
